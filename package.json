{
  "name": "drag-import-relative-path",
  "displayName": "Drag Import Relative Path",
  "description": "",
  "publisher": "ElecTreeFrying",
  "version": "0.0.1",
  "author": {
    "name": "John James Ermita√±o",
    "email": "jjgermitano@gmail.com"
  },
  "icon": "assets/github.png",
  "engines": {
    "vscode": "^1.70.0"
  },
  "homepage": "https://github.com/ElecTreeFrying/drag-import-relative-path/blob/master/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/ElecTreeFrying/drag-import-relative-path.git"
  },
  "bugs": {
    "email": "electreefrying.git@gmail.com",
    "url": "https://github.com/ElecTreeFrying/drag-import-relative-path/issues"
  },
  "galleryBanner": {
    "color": "#494949",
    "theme": "dark"
  },
  "license": "MIT",
  "categories": ["Other"],
  "keywords": [
    "drag import",
    "drag and drop import",
    "relative import",
    "auto import",
    "relative path",
    "drag",
    "import",
    "path",
    "relative",
    "angular",
    "react",
    "vue",
    "javascript",
    "typescript",
    "css",
    "scss",
    "html",
    "markdown"
  ],
  "activationEvents": ["*"],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": [
      {
        "title": "Auto Import Relative Path",
        "properties": {
          "general.disableNotifications": {
            "title": "Disable all notifications",
            "description": "Disable all notifications on file drop to active pane.",
            "type": "boolean",
            "default": false
          },
          "importStatements.script.preserveFileExtension": {
            "title": "Preserve file extension",
            "description": "Preserve file extension in relative path.",
            "type": "boolean",
            "default": true
          },
          "importStatements.script.javascriptImportStyle": {
            "title": "Javascript (.ts)/React Javascript(.tsx) import style",
            "description": "",
            "type": "string",
            "default": "import name from '_relativePath_';",
            "enum": [
              "import name from '_relativePath_';",
              "import { name } from '_relativePath_';",
              "import { default as name } from '_relativePath_';",
              "import * as name from '_relativePath_';",
              "import '_relativePath_';",
              "var name = require('_relativePath_');",
              "const name = require('_relativePath_');",
              "var name = import('_relativePath_');",
              "const name = import('_relativePath_');"
            ]
          },
          "importStatements.script.typescriptImportStyle": {
            "title": "Typescript (.ts)/React Typescript(.tsx) import style",
            "description": "",
            "type": "string",
            "default": "import { name } from '_relativePath_';",
            "enum": [
              "import name from '_relativePath_';",
              "import { name } from '_relativePath_';",
              "import { default as name } from '_relativePath_';",
              "import * as name from '_relativePath_';",
              "import '_relativePath_';"
            ]
          },
          "importStatements.styleSheet.preserveFileExtension": {
            "title": "Preserve file extension",
            "description": "Preserve file extension in relative path.",
            "type": "boolean",
            "default": false
          },
          "importStatements.styleSheet.cssImportStyle": {
            "title": "CSS import style",
            "description": "",
            "type": "string",
            "default": "@import '_relativePath_';",
            "enum": [
              "@import '_relativePath_';",
              "@import url('_relativePath_');"
            ]
          },
          "importStatements.styleSheet.scssSassImportStyle": {
            "title": "SCSS/SASS import style",
            "description": "",
            "type": "string",
            "default": "@import '_relativePath_';",
            "enum": [
              "@import '_relativePath_';",
              "@import url('_relativePath_');",
              "@use '_relativePath_';",
              "@use '_relativePath_' as *;"
            ]
          },
          "importStatements.styleSheet.lessImportStyle": {
            "title": "LESS import style",
            "description": "",
            "type": "string",
            "default": "@import '_relativePath_';",
            "enum": [
              "@import '_relativePath_';",
              "@import (name) '_relativePath_';"
            ]
          },
          "importStatements.markup.htmlScriptImportStyle": {
            "title": "HTML import style for script",
            "description": "",
            "type": "string",
            "default": "<script type=\"text/javascript\" src=\"_relativePath_\"></script>",
            "enum": [
              "<script type=\"text/javascript\" src=\"_relativePath_\"></script>"
            ]
          },
          "importStatements.markup.htmlStyleSheetImportStyle": {
            "title": "HTML import style from stylesheet",
            "description": "",
            "type": "string",
            "default": "<link href=\"_relativePath_\" rel=\"stylesheet\">",
            "enum": [
              "<link href=\"_relativePath_\" rel=\"stylesheet\">"
            ]
          },
          "importStatements.markup.markdownImportStyle": {
            "title": "Markdown import style",
            "description": "",
            "type": "string",
            "default": "![text](_relativePath_)",
            "enum": [
              "![text](_relativePath_)"
            ]
          },
          "importStatements.markup.markdownImageImportStyle": {
            "title": "Markdown image import style",
            "description": "",
            "type": "string",
            "default": "![alt-text](_relativePath_ \"Hover text\")",
            "enum": [
              "![alt-text](_relativePath_ \"Hover text\")",
              "![alt-text][image] / [image]: _relativePath_ \"Hover text\""
            ]
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/lodash": "^4.14.182",
    "@types/mocha": "^9.1.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.70.0",
    "@typescript-eslint/eslint-plugin": "^5.31.0",
    "@typescript-eslint/parser": "^5.31.0",
    "@vscode/test-electron": "^2.1.5",
    "eslint": "^8.20.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "typescript": "^4.7.4"
  },
  "dependencies": {
    "lodash": "^4.17.21",
    "relative": "^3.0.2"
  }
}
